<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace=绑定一个对应的Dao/Mapper接口-->
<mapper namespace="com.dao.TeacherDao">
    <select id="getTeacherList" resultType="teacher">
        select * from teacher
    </select>

    <!--03-new-3: 按结果嵌套查询-->
    <select id="getTeacherWithAllStudent" resultMap="TeacherStudent">
        select s.id sid, s.name sname, t.name tname,t.id tid
        from student s,teacher t
        where s.tid = t.id and t.id = #{id}
    </select>
    <resultMap id="TeacherStudent" type="teacher">
        <result column="tid" property="id"/>
        <result property="name" column="tname"/>
        <!--复杂的属性，我们需要单独处理 对象： association 集合： collection
            javaType="" 指定属性的类型！
            集合中的泛型信息，我们使用ofType获取
        -->
        <collection property="studentList" ofType="student">
            <result property="id" column="sid"/>
            <result property="name" column="sname"/>
            <result property="tid" column="tid"/>
        </collection>
    </resultMap>

    <!--03-new-4: 按结果嵌套查询-->
    <select id="getTeacherWithAllStudent2" resultMap="TeacherStudent2">
        select * from teacher where id = #{id}
    </select>
    <resultMap id="TeacherStudent2" type="Teacher">
        <collection property="studentList" column="id" javaType="ArrayList" ofType="student" select="getStudentByTeacherId"/>
    </resultMap>
    <select id="getStudentByTeacherId" resultType="student">
        select * from student where tid = #{id}
    </select>
</mapper>

